pragma solidity ^0.8.17;

contract ShipSolution {
    address public owner;

    constructor() {
        owner = msg.sender;
        bytes
            memory bytecode = hex"608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde0314610046578063436cc795146100775780638da5cb5b14610098575b600080fd5b604080518082018252600681526535b430b134b160d11b6020820152905161006e919061065b565b60405180910390f35b61008a6100853660046106a9565b6100b3565b60405190815260200161006e565b6000546040516001600160a01b03909116815260200161006e565b60008360ff036100cf576100c8868585610289565b905061027f565b600684901c6000819003610119576100e987866001610310565b15610101576100f9878686610289565b91505061027f565b61010b8786610332565b600686901b1791505061027f565b603f808616908216600080600685901c810361017a5761013b8b856001610310565b1561015c5761014a8b84610332565b600686901b179550505050505061027f565b6101668385610422565b9150600682901b8517945060019050610185565b600685901c60071691505b80806101ab5750816101978486610422565b1480156101ab57506101ab8b856002610310565b156101dd5760006101bd85848e610496565b9050806040146101db5780600687901b17965050505050505061027f565b505b60006101e88361058d565b9050806101f58587610422565b1461022c57600061020785838f610496565b9050806040146102265780600688901b1797505050505050505061027f565b5061026b565b6102388c866002610310565b1561026b57600061024a86838f610496565b9050806040146102695780600688901b1797505050505050505061027f565b505b6102768c868b610289565b96505050505050505b9695505050505050565b600080610295856105c7565b905060005b6040805160208101859052808201839052606081018490526080810187905260a0810186905260c0016040516020818303038152906040528051906020012060001c6102e691906106ec565b9250806102f281610724565b9150610302905086846000610310565b1561029a5750509392505050565b60008061032184600685901b61073d565b6001901b85161190505b9392505050565b6000600382901c816103456008856106ec565b9050811561037957600061035a600886610750565b905061036886826000610310565b1561037757925061041c915050565b505b60088210156103ae57600061038f85600861073d565b905061039d86826000610310565b156103ac57925061041c915050565b505b80156103e05760006103c1600186610750565b90506103cf86826000610310565b156103de57925061041c915050565b505b60088110156104155760006103f685600161073d565b905061040486826000610310565b1561041357925061041c915050565b505b6040925050505b92915050565b6000600383901c816104356008866106ec565b9050600384901c60006104496008876106ec565b9050818403610474578281111561046757600194505050505061041c565b600394505050505061041c565b8382111561048957600294505050505061041c565b600494505050505061041c565b6000600384901c816104a96008876106ec565b9050846001036104d857806007036104c65760409250505061032b565b806104d081610724565b915050610553565b8460020361050557816007036104f35760409250505061032b565b816104fd81610724565b925050610553565b8460030361052a57806000036105205760409250505061032b565b806104d081610763565b8460040361055357816000036105455760409250505061032b565b8161054f81610763565b9250505b600061056382600385901b61073d565b905061057185826000610310565b1561058057925061032b915050565b5060409695505050505050565b60008160010361059f57506003919050565b816002036105af57506004919050565b816003036105bf57506001919050565b506002919050565b600061041c67ffffffffffffffff831660006105f1675555555555555555600184901c1683610750565b915061060e673333333333333333600284901c811690841661073d565b915061061e600483901c8361073d565b670f0f0f0f0f0f0f0f169150603861063e8367010101010101010161077a565b67ffffffffffffffff16901c67ffffffffffffffff169050919050565b600060208083528351808285015260005b818110156106885785810183015185820160400152820161066c565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060008060c087890312156106c257600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008261070957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b6000600182016107365761073661070e565b5060010190565b8082018082111561041c5761041c61070e565b8181038181111561041c5761041c61070e565b6000816107725761077261070e565b506000190190565b808202811582820484141761041c5761041c61070e56fea26469706673582212207f6961cd82451064fc58ba4231161a49a73a1061e3ef03fec9b4700ea081f86964736f6c63430008110033";
        assembly {
            return(add(bytecode, 0x20), mload(bytecode))
        }
    }
}